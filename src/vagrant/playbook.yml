---
- name: Playbook for windows 11
  hosts: all
  become_method: runas
  become: yes
  become_user: vagrant

  tasks:    
    - name: Exclude C drive with windows defender
      win_shell: Add-MpPreference -ExclusionPath 'C:/'

    - name: Disable windows defender
      script: ./disable_windows_defender.ps1

    - name: Disable firewall
      win_firewall:
        state: disabled

    - name: Install source package
      win_shell: Add-AppxPackage -Path "https://cdn.winget.microsoft.com/cache/source.msix"

    - name: Install system internals
      win_shell: winget install sysinternals --accept-package-agreements --accept-source-agreements

    - name: Install git
      win_shell: winget install Git.Git --accept-package-agreements --accept-source-agreements

    - name: install netcat
      win_chocolatey:
        name: netcat
    
    - name: Install vscode
      win_shell: winget install Microsoft.VisualStudioCode --accept-package-agreements --accept-source-agreements

    - name: Install firefox
      win_shell: winget install Mozilla.Firefox --accept-package-agreements --accept-source-agreements

    - name: Install Visual Studio Community
      win_shell: winget install Microsoft.VisualStudio.2022.Community --accept-package-agreements --accept-source-agreements

    - name: Install OpenSSH
      win_shell: Add-WindowsCapability -Online -Name OpenSSH.Server

    - name: Enable OpenSSH on startup
      win_shell: Set-Service -Name sshd -StartupType 'Automatic'

    - name: create .ssh folder for vagrant user
      win_shell: >
        if (!(Test-Path "$env:USERPROFILE\.ssh")) {
          New-Item -Path "$env:USERPROFILE\.ssh" -ItemType Directory
        }

    - name: install vagrant public key to vagrant user
      win_shell: |
        $pubkey_url = "https://raw.githubusercontent.com/hashicorp/vagrant/main/keys/vagrant.pub"
        Invoke-WebRequest -Uri $pubkey_url -OutFile "$env:USERPROFILE\.ssh\authorized_keys" -UseBasicParsing

    - name: install vagrant public key to Administrator user
      win_shell: cp "$env:USERPROFILE\.ssh\authorized_keys" "$env:ProgramData\ssh\administrators_authorized_keys"

    - name: Start OpenSSH
      win_shell: Start-Service sshd

    - name: Set the default shell to PowerShell
      win_shell: >
        New-ItemProperty -Path "HKLM:\SOFTWARE\OpenSSH" -Name DefaultShell -Value
        "C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe"
        -PropertyType String -Force

    - name: Ensure RDP service is running and enabled
      win_service:
        name: TermService
        start_mode: auto
        state: started

    - name: Set the registry key to enable RDP
      ansible.windows.win_regedit:
        path: HKLM:\System\CurrentControlSet\Control\Terminal Server
        name: fDenyTSConnections
        type: dword
        data: 0

# install nmap manually

    # - name: Install VS Tools
    #   win_chocolatey:
    #     name: visualstudio2022buildtools
    #     state: present
    #     version: '117.9.0.0'
    #     package_params:
    #       "--includeOptional --add Microsoft.VisualStudio.Workload.NodeBuildTools --add Microsoft.VisualStudio.Workload.WebBuildTools --add Microsoft.VisualStudio.Workload.DataBuildTools --add Microsoft.VisualStudio.Workload.MSBuildTools"
    #   register: vs_output



# #ROSE
# #cd ~/Desktop
# #reload terminal
# #git clone https://github.com/BlueSquid1/rose.git
# #cd rose
# #& 'C:\Program Files (x86)\Microsoft Visual Studio\Installer\setup.exe' modify --installPath "C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools" --config ".\client\rose.vsconfig" --quiet
# #Add-Content -Path $PROFILE -Value "`$env:Path += ';C:\Program Files\dotnet'"
# #cd client
# #reload terminal
# #dotnet restore
# #MSBuild.exe /property:Configuration=Release
# #cp -r .\rose\bin\Release\net8.0 'C:\Program Files\Rose'
# #Add-Content -Path $PROFILE -Value "`$env:Path += ';C:\Program Files\Rose'"
# #reload terminal
# #open regedit and set SOFTWARE\Policies\Microsoft\Windows NT\Terminal Services\fAllowUnlistedRemotePrograms to 1